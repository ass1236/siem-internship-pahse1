üéØ Objective
Simulate and detect suspicious PowerShell behavior that mimics malware delivery and execution techniques ‚Äî specifically downloading and dropping a known test malware file (EICAR).

‚öôÔ∏è Simulation Setup
To simulate a real-world malware scenario, we use the following PowerShell command:

Invoke-WebRequest -Uri "https://secure.eicar.org/eicar.com" -OutFile "$env:TEMP\eicar.com"
This command:
 ** Launches PowerShell.
 ** Downloads the EICAR test file (a safe, non-malicious file used to test antivirus and detection systems).
 ** Saves it as eicar.com in the TEMP folder ‚Äî a known location often used by malware to store payloads.

üìú Custom Detection Rules in Wazuh
These rules are written under the <group name="local,sysmon,custom"> section to detect different stages of this malicious activity using Sysmon events parsed by Wazuh.

üîç 1. PowerShell Initiated a Network Connection
<rule id="100032" level="10">
  <if_sid>61603</if_sid> <!-- Sysmon Event ID 3: Network connection -->
  <field name="win.eventdata.image" type="pcre2">(?i)powershell\.exe</field>
  <description>‚ö† PowerShell initiated a network connection</description>
  <mitre> 
    <id>T1059.001</id> <!-- PowerShell -->
    <id>T1105</id>     <!-- Ingress Tool Transfer -->
  </mitre>
  <continue>yes</continue>
</rule>
 ** Why it's suspicious: PowerShell is rarely used by end users to connect externally ‚Äî attackers often use it to download payloads (T1105).
 ** Sysmon Event ID 3: Captures outbound network activity.

üîç 2. PowerShell Created a File with a Suspicious Extension
<rule id="100102" level="10">
  <if_sid>61605</if_sid>
  <field name="win.eventdata.image" type="pcre2">(?i)powershell\.exe</field>
  <field name="win.eventdata.targetFilename" type="pcre2">(?i)\.(exe|zip|bat|cmd|ps1|com)$</field>
  <description>‚ö† PowerShell created a file with a suspicious extension</description>
  <mitre> 
    <id>T1059.001</id>
    <id>T1204</id>
    <id>T1105</id>
  </mitre>
  <continue>yes</continue>
</rule>
 ** Why it's suspicious: Dropping .exe, .ps1, .com, or .bat files is a common behavior in malware staging or execution.
 ** Sysmon Event ID 11: Captures file creation events, including filename and process responsible.

üîç 3. Suspicious Process Creation by PowerShell
<rule id="100103" level="10">
  <if_sid>61601</if_sid> <!-- Sysmon Event ID 1: Process Creation -->
  <field name="win.eventdata.parentImage" type="pcre2">(?i)powershell\.exe</field>
  <field name="win.eventdata.image" type="pcre2">(?i)(cmd\.exe|wscript\.exe|cscript\.exe|mshta\.exe|rundll32\.exe)$</field>
  <description>‚ö† PowerShell process creation (broad match)</description>
  <mitre>
    <id>T1059.001</id> <!-- PowerShell -->
    <id>T1059</id>     <!-- Command and Scripting Interpreter -->
    <id>T1203</id>     <!-- Exploitation for Client Execution -->
  </mitre>
  <group>malware,custom_alert,sysmon,windows</group>
</rule>
 ** Why it's suspicious: PowerShell launching these executables is rarely legitimate and often indicates execution of further payloads or scripts.
 ** Event ID 1: Process creation (very useful for detecting malicious behavior).

‚úÖ Conclusion
This simulation demonstrates how Wazuh, in combination with Sysmon, can effectively detect malicious behaviors associated with fileless malware attacks and initial infection vectors. By monitoring PowerShell activity, network connections, file creation, and process execution, defenders can build strong detection logic that covers multiple stages of an attack chain.

Each custom rule targets specific behaviors:
 ** Network access via PowerShell indicates potential payload download (T1105).
 ** File creation in suspicious directories or with dangerous extensions mimics typical malware staging.
 ** Process creation events help catch post-download execution and lateral movement techniques.
